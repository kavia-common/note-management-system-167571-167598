{"is_source_file": true, "format": "Java", "description": "This Java source file defines the NotesController class, which handles HTTP requests for CRUD operations on notes within a notes management backend. It provides endpoints for listing, creating, retrieving, updating, and deleting notes, scoped to the authenticated user.", "external_files": ["com/example/notesappbackend/domain/Note.java", "com/example/notesappbackend/domain/User.java", "com/example/notesappbackend/dto/NoteDtos.java", "com/example/notesappbackend/mapper/NoteMapper.java", "com/example/notesappbackend/security/AuthFilter.java", "com/example/notesappbackend/service/NoteService.java", "com/example/notesappbackend/service/UserService.java", "org.springframework.http.ResponseEntity.java", "org.springframework.util.StringUtils.java", "org.springframework.web.bind.annotation.*", "io.swagger.v3.oas.annotations.Operation.java", "io.swagger.v3.oas.annotations.tags.Tag.java", "jakarta.servlet.http.HttpServletRequest.java"], "external_methods": ["AuthFilter.ATTR_USER_ID", "users.findById()", "noteService.list()", "NoteMapper.toResponse()", "noteService.create()", "noteService.getOwned()", "noteService.update()", "noteService.delete()"], "published": ["NotesController", "NotesController.ApiError", "NotesController.UnauthorizedException"], "classes": [{"name": "NotesController", "description": "Main controller class providing CRUD endpoints for notes associated with authenticated users."}, {"name": "NotesController.ApiError", "description": "Helper class representing error responses, specifically for bad requests."}, {"name": "NotesController.UnauthorizedException", "description": "Custom runtime exception class marked with a Spring ResponseStatus for unauthorized access handling."}], "methods": [{"name": "requireUser", "description": "Retrieves the authenticated user from the HttpServletRequest or throws UnauthorizedException if missing."}, {"name": "list", "description": "Handles GET requests to list all notes for the authenticated user."}, {"name": "create", "description": "Handles POST requests to create a new note for the authenticated user."}, {"name": "get", "description": "Handles GET requests to retrieve a specific note by its UUID for the authenticated user."}, {"name": "update", "description": "Handles PUT requests to update an existing note's details."}, {"name": "delete", "description": "Handles DELETE requests to remove a note."}], "calls": ["requireUser(req)", "users.findById(userId)", "notes.list(u)", "NoteMapper.toResponse()", "notes.create(u, title, content)", "notes.getOwned(u, id)", "notes.update(n, title, content, archived)", "notes.delete(n)"], "search-terms": ["NotesController", "CRUD notes", "authenticated user notes", "NoteMapper", "NoteDtos", "NoteService", "UserService", "/api/notes", "Authorization", "UUID note id"], "state": 2, "file_id": 22, "knowledge_revision": 45, "git_revision": "", "hash": "ce8f9190da5610a1b38d6e3ecee1f172", "format-version": 4, "code-base-name": "notes_app_backend", "filename": "notes_app_backend/src/main/java/com/example/notesappbackend/controller/NotesController.java", "revision_history": [{"45": ""}]}